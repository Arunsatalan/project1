import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';
import './CreateAccount.css';
import { NotificationContainer, NotificationManager } from 'react-notifications';
import 'react-notifications/lib/notifications.css';

const CreateAccount = () => {
    const navigate = useNavigate();
    const [formData, setFormData] = useState({
        firstname: '',
        lastname: '',
        phone_no: '',
        address: '',
        email: '',
        username: '',
        password: '',
        confirmPassword: '',
        adminId: '', // New field for Admin ID
    });

    const [adminUsernames, setAdminUsernames] = useState([]); // State for admin usernames
    const [errors, setErrors] = useState({});
    const [loading, setLoading] = useState(false);

    useEffect(() => {
        // Fetch admin usernames when component mounts
        const fetchAdminUsernames = async () => {
            try {
                const response = await axios.get('http://localhost:3000/project1/backend/Login_php/Login_php/fetch_admins.php'); // Adjust the URL to your endpoint
                if (response.data && Array.isArray(response.data)) {
                    setAdminUsernames(response.data);
                } else {
                    NotificationManager.error('Invalid data received from server.');
                }
            } catch (error) {
                console.error('Error fetching admin usernames:', error);
                NotificationManager.error('Failed to fetch admin usernames.');
            }
        };

        fetchAdminUsernames();
    }, []);

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData({
            ...formData,
            [name]: value
        });
    };

    const handleClick = async () => {
        setLoading(true);
        const newErrors = {};
        if (!formData.firstname) newErrors.firstname = 'First name is required.';
        if (!formData.lastname) newErrors.lastname = 'Last name is required.';
        if (!formData.phone_no) newErrors.phone_no = 'Phone number is required.';
        if (!formData.address) newErrors.address = 'Address is required.';
        if (!formData.email) newErrors.email = 'Email is required.';
        if (!formData.username) newErrors.username = 'Username is required.';
        if (!formData.password) newErrors.password = 'Password is required.';
        if (formData.password !== formData.confirmPassword) newErrors.confirmPassword = 'Passwords do not match.';

        if (Object.keys(newErrors).length > 0) {
            for (const [field, message] of Object.entries(newErrors)) {
                NotificationManager.error(message, field);
            }
            setLoading(false);
            return;
        }

        try {
            const response = await axios.post('http://localhost:3000/project1/backend/Login_php/Login_php/Otp.php', formData, {
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.data.errors) {
                if (typeof response.data.errors === 'string') {
                    NotificationManager.error(response.data.errors);
                } else {
                    for (const [key, message] of Object.entries(response.data.errors)) {
                        NotificationManager.error(message, key);
                    }
                }
            } else {
                NotificationManager.success('OTP has been sent successfully!');
                setTimeout(() => {
                    navigate('/OTP', { state: { email: formData.email } });
                }, 1500);
            }
        } catch (error) {
            console.error('Error submitting form:', error);
            NotificationManager.error('An error occurred. Please try again.');
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="CreateAccount">
            <div className="CreateAccount1">
                <h2>TinyToes at SriLanka</h2>
                <p>
                    At TinyToes, we are committed to providing a safe, nurturing, and stimulating environment that supports the holistic development of your child.
                </p>
            </div>

            <div className="CreateAccount2">
                <div className="content1">
                    <h4>Start for free</h4>
                    <h2>Create new account.</h2>
                    <div className="sec1">
                        <p>Already a Member?</p>
                        <a href="./login">
                            <p className="Login">Login</p>
                        </a>
                    </div>
                </div>
                <div className="content2">
                    <div className="row">
                        <div className="input-box">
                            <h4>First name</h4>
                            <input
                                type="text"
                                name="firstname"
                                placeholder='First name'
                                value={formData.firstname}
                                onChange={handleChange}
                            />
                        </div>
                        <div className="input-box">
                            <h4>Last name</h4>
                            <input
                                type="text"
                                name="lastname"
                                placeholder='Last name'
                                value={formData.lastname}
                                onChange={handleChange}
                            />
                        </div>
                    </div>
                    <div className="row">
                        <div className="input-box">
                            <h4>Phone no</h4>
                            <input
                                type="text"
                                name="phone_no"
                                placeholder='Phone number'
                                value={formData.phone_no}
                                onChange={handleChange}
                            />
                        </div>
                    </div>
                    <div className="row">
                        <div className="input-box">
                            <h4>Address</h4>
                            <input
                                type="text"
                                name="address"
                                placeholder='Address'
                                value={formData.address}
                                onChange={handleChange}
                            />
                        </div>
                    </div>
                    <div className="row">
                        <div className="input-box">
                            <h4>Email</h4>
                            <input
                                type="text"
                                name="email"
                                placeholder='Email'
                                value={formData.email}
                                onChange={handleChange}
                            />
                        </div>
                    </div>

                    <div className="row">
                        <div className="input-box">
                            <h4>Username</h4>
                            <input
                                type="text"
                                name="username"
                                placeholder='Username'
                                value={formData.username}
                                onChange={handleChange}
                            />
                        </div>
                    </div>
                    <div className="row">
                        <div className="input-box">
                            <h4>Password</h4>
                            <input
                                type="password"
                                name="password"
                                placeholder='Password'
                                value={formData.password}
                                onChange={handleChange}
                            />
                        </div>
                        <div className="input-box">
                            <h4>Confirm Password</h4>
                            <input
                                type="password"
                                name="confirmPassword"
                                placeholder='Confirm Password'
                                value={formData.confirmPassword}
                                onChange={handleChange}
                            />
                        </div>
                    </div>

                    <div className="row">
                        {/* New Admin ID Dropdown */}
                        <div className="input-box">
                            <h4>Admin ID</h4>
                            <select
                                name="adminId"
                                value={formData.adminId}
                                onChange={handleChange}
                            >
                                <option value="">Select Admin</option>
                                {adminUsernames.map((admin, index) => (
                                    <option key={index} value={admin}>
                                        {admin}
                                    </option>
                                ))}
                            </select>
                        </div>
                    </div>

                    <div className="row">
                        <button onClick={handleClick} disabled={loading}>
                            {loading ? 'Loading...' : 'Create Account'}
                        </button>
                    </div>
                </div>
            </div>

            <NotificationContainer />
        </div>
    );
};

export default CreateAccount;
